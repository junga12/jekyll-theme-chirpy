<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://junga12.github.io/</id><title>Junga12</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-03-12T01:18:26+09:00</updated> <author> <name>Junga Park</name> <uri>https://junga12.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://junga12.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://junga12.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Junga Park </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>python static method</title><link href="https://junga12.github.io/posts/static-method/" rel="alternate" type="text/html" title="python static method" /><published>2021-03-11T13:00:00+09:00</published> <updated>2021-03-11T13:00:00+09:00</updated> <id>https://junga12.github.io/posts/static-method/</id> <content src="https://junga12.github.io/posts/static-method/" /> <author> <name>Junga Park</name> </author> <category term="." /> <category term="python" /> <summary> 파이썬을 사용하다가 정적 메서드를 사용해봤는데, 자세하게 정적 메서드가 무엇인지 몰라서 공부해봤다. 정적 메서드 일반적으로 클래스를 사용하기 위해서 인스턴스를 생성하여 사용합니다. 하지만 정적메서드는 인스턴스를 생성하지 않고 클래스를 통해서 직접 호출할 수 있습니다. @staticmehtod 예제 class Calculator: @staticmethod def add(a, b): return a + b 위의 예제는 두 값을 받아서 합을 반환하는 예제입니다. 정적 메서드를 사용할 때는 다음과 같이 사용합니다. 사용방법 Calculator.add(1, 2) # 인스턴스를 사용하지 않고, 클래스에서 바로 호출 물론, 인스턴스를 사용하여 다음과 같이 사용해도 ... </summary> </entry> <entry><title>REST API</title><link href="https://junga12.github.io/posts/restapi/" rel="alternate" type="text/html" title="REST API" /><published>2021-03-09T13:00:00+09:00</published> <updated>2021-03-09T13:00:00+09:00</updated> <id>https://junga12.github.io/posts/restapi/</id> <content src="https://junga12.github.io/posts/restapi/" /> <author> <name>Junga Park</name> </author> <category term="." /> <category term="cs" /> <summary> Representational State Transfer 의 약자 REST API 설계 동작 = http method 데이터를 읽고, 추가하고, 수정하고, 삭제하는 동작은 http method를 이용하여 표현한다. http method는 GET, POST, PUT, DELETE가 있습니다. GET /items는 items이라는 데이터를 읽는 것을 의미하고, DELETE /items는 items라는 데이터를 삭제하는 것을 의미합니다. 즉, uri가 동일하더라도 어떤 http method를 사용하는지에 따라서 다른 동작을 할 수 있습니다. 자원 = URI 목적으로 하는 자원은 uri를 통해 표현합니다. 아이템을 원하면 /items, 유저 정보를 원하면 /users처럼 표현하여 원하는 데이터를 ... </summary> </entry> <entry><title>react project - 쇼핑몰 페이지 만들기</title><link href="https://junga12.github.io/posts/react-ecommerce/" rel="alternate" type="text/html" title="react project - 쇼핑몰 페이지 만들기" /><published>2021-03-09T13:00:00+09:00</published> <updated>2021-03-09T13:00:00+09:00</updated> <id>https://junga12.github.io/posts/react-ecommerce/</id> <content src="https://junga12.github.io/posts/react-ecommerce/" /> <author> <name>Junga Park</name> </author> <category term="." /> <category term="project" /> <summary> 목적 리액트 사용해보기. 리액트 공부를 해봤으니까 공부한거 적용 + 더 찾아가면서 리액트로 간단한 쇼핑몰 페이지 만들어보기 데이터베이스는 mysql, 서버는 스프링 사용하기. RESTful API로 만들어보기 어려웠던 점 css가 너무 어려웠다. 나는 리액트를 사용해보는 것이 목적이여서 css에 많은 시간을 투자하고 싶지 않았는데, 디자인적 요소를 하나 맞게하는 것도 너무 시간이 오래걸렸다. 결국에는 위치만 대략 맞추는것으로 만족하기로 했고, 이쁜 디자인이나 폰트같은 요소는 다음에 해보기로 생각했다. 고민한 부분 여러 쇼핑몰 페이지에 들어가보면 상품을 신상품 순서, 많이 팔린 순서, 후기가 많은 순서 등 다양한 기준으로 나누어져 있다. 동일한 상품들을 일정한 기준에 따라서 정렬을 하는 것인데,... </summary> </entry> <entry><title>crawling web page</title><link href="https://junga12.github.io/posts/mutiprocessing/" rel="alternate" type="text/html" title="crawling web page" /><published>2020-11-15T13:00:00+09:00</published> <updated>2021-03-09T00:50:16+09:00</updated> <id>https://junga12.github.io/posts/mutiprocessing/</id> <content src="https://junga12.github.io/posts/mutiprocessing/" /> <author> <name>Junga Park</name> </author> <category term="." /> <category term="project" /> <summary> 웹페이지를 크롤링하는데, 시간이 너무 오래 걸려서 크롤링하는 시간을 줄이는 방법에 대해서 알아봤습니다. 공통 라이브러리: BeautifulSoup, requests, openpyxl 크롤링하려는 웹 페이지: 네이버 금융 페이지(https://finance.naver.com/) 네이버 금융 웹 페이지는 기업마다 고유한 코드를 가지고 있고, https://finance.naver.com/item/main.nhn?code=(기업코드)의 형식으로 기업의 데이터에 접근할 수 있습니다. 기업 코드는 하나의 엑셀 파일로 저장해놨습니다. 이를 읽고, 필요한 데이터를 가져와 동일한 엑셀 파일에 저장합니다. 엑셀 파일은 3개의 워크시트로 구성되어 있고, 각 시트에 기업 코드가 나눠서 저장되어 있으며, 각 시트의 ... </summary> </entry> <entry><title>로봇 조종하기</title><link href="https://junga12.github.io/posts/Bj2169/" rel="alternate" type="text/html" title="로봇 조종하기" /><published>2020-10-20T13:00:00+09:00</published> <updated>2020-10-20T13:00:00+09:00</updated> <id>https://junga12.github.io/posts/Bj2169/</id> <content src="https://junga12.github.io/posts/Bj2169/" /> <author> <name>Junga Park</name> </author> <category term="algorithm" /> <category term="solve" /> <summary> 백준 2169번 https://www.acmicpc.net/problem/2169 문제 NASA에서는 화성 탐사를 위해 화성에 무선 조종 로봇을 보냈다. 실제 화성의 모습은 굉장히 복잡하지만, 로봇의 메모리가 얼마 안 되기 때문에 지형을 N×M 배열로 단순화 하여 생각하기로 한다. 지형의 고저차의 특성상, 로봇은 움직일 때 배열에서 왼쪽, 오른쪽, 아래쪽으로 이동할 수 있지만, 위쪽으로는 이동할 수 없다. 또한 한 번 탐사한 지역(배열에서 하나의 칸)은 탐사하지 않기로 한다. 각각의 지역은 탐사 가치가 있는데, 로봇을 배열의 왼쪽 위 (1, 1)에서 출발시켜 오른쪽 아래 (N, M)으로 보내려고 한다. 이때, 위의 조건을 만족하면서, 탐사한 지역들의 가치의 합이 최대가 되도록 하는 프로그램을 작... </summary> </entry> </feed>
